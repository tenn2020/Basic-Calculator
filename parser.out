Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> expression EQUALITY expression
Rule 8     expression -> expression NOTEQUAL expression
Rule 9     expression -> expression POWER expression
Rule 10    expression -> expression MODULO expression
Rule 11    expression -> expression ? expression : expression
Rule 12    expression -> MINUS expression
Rule 13    expression -> LPAREN expression RPAREN
Rule 14    expression -> NUMBER
Rule 15    expression -> NAME

Terminals, with rules where they appear

:                    : 11
?                    : 11
DIVIDE               : 6
EQUALITY             : 7
EQUALS               : 1
LPAREN               : 13
MINUS                : 4 12
MODULO               : 10
NAME                 : 1 15
NOTEQUAL             : 8
NUMBER               : 14
PLUS                 : 3
POWER                : 9
RPAREN               : 13
TIMES                : 5
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 11 12 13
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (2) statement -> . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    NAME            shift and go to state 2
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUALS expression
    (15) expression -> NAME .

    EQUALS          shift and go to state 7
    PLUS            reduce using rule 15 (expression -> NAME .)
    MINUS           reduce using rule 15 (expression -> NAME .)
    TIMES           reduce using rule 15 (expression -> NAME .)
    DIVIDE          reduce using rule 15 (expression -> NAME .)
    EQUALITY        reduce using rule 15 (expression -> NAME .)
    NOTEQUAL        reduce using rule 15 (expression -> NAME .)
    POWER           reduce using rule 15 (expression -> NAME .)
    MODULO          reduce using rule 15 (expression -> NAME .)
    ?               reduce using rule 15 (expression -> NAME .)
    $end            reduce using rule 15 (expression -> NAME .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    EQUALITY        shift and go to state 12
    NOTEQUAL        shift and go to state 13
    POWER           shift and go to state 14
    MODULO          shift and go to state 15
    ?               shift and go to state 16


state 4

    (12) expression -> MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 17

state 5

    (13) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 19

state 6

    (14) expression -> NUMBER .

    PLUS            reduce using rule 14 (expression -> NUMBER .)
    MINUS           reduce using rule 14 (expression -> NUMBER .)
    TIMES           reduce using rule 14 (expression -> NUMBER .)
    DIVIDE          reduce using rule 14 (expression -> NUMBER .)
    EQUALITY        reduce using rule 14 (expression -> NUMBER .)
    NOTEQUAL        reduce using rule 14 (expression -> NUMBER .)
    POWER           reduce using rule 14 (expression -> NUMBER .)
    MODULO          reduce using rule 14 (expression -> NUMBER .)
    ?               reduce using rule 14 (expression -> NUMBER .)
    $end            reduce using rule 14 (expression -> NUMBER .)
    RPAREN          reduce using rule 14 (expression -> NUMBER .)
    :               reduce using rule 14 (expression -> NUMBER .)


state 7

    (1) statement -> NAME EQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 20

state 8

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 21

state 9

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 22

state 10

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 23

state 11

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 24

state 12

    (7) expression -> expression EQUALITY . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 25

state 13

    (8) expression -> expression NOTEQUAL . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 26

state 14

    (9) expression -> expression POWER . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 27

state 15

    (10) expression -> expression MODULO . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 28

state 16

    (11) expression -> expression ? . expression : expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 29

state 17

    (12) expression -> MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    PLUS            reduce using rule 12 (expression -> MINUS expression .)
    MINUS           reduce using rule 12 (expression -> MINUS expression .)
    TIMES           reduce using rule 12 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 12 (expression -> MINUS expression .)
    EQUALITY        reduce using rule 12 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 12 (expression -> MINUS expression .)
    POWER           reduce using rule 12 (expression -> MINUS expression .)
    MODULO          reduce using rule 12 (expression -> MINUS expression .)
    ?               reduce using rule 12 (expression -> MINUS expression .)
    $end            reduce using rule 12 (expression -> MINUS expression .)
    RPAREN          reduce using rule 12 (expression -> MINUS expression .)
    :               reduce using rule 12 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! POWER           [ shift and go to state 14 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 18

    (15) expression -> NAME .

    PLUS            reduce using rule 15 (expression -> NAME .)
    MINUS           reduce using rule 15 (expression -> NAME .)
    TIMES           reduce using rule 15 (expression -> NAME .)
    DIVIDE          reduce using rule 15 (expression -> NAME .)
    EQUALITY        reduce using rule 15 (expression -> NAME .)
    NOTEQUAL        reduce using rule 15 (expression -> NAME .)
    POWER           reduce using rule 15 (expression -> NAME .)
    MODULO          reduce using rule 15 (expression -> NAME .)
    ?               reduce using rule 15 (expression -> NAME .)
    $end            reduce using rule 15 (expression -> NAME .)
    RPAREN          reduce using rule 15 (expression -> NAME .)
    :               reduce using rule 15 (expression -> NAME .)


state 19

    (13) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    RPAREN          shift and go to state 30
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    EQUALITY        shift and go to state 12
    NOTEQUAL        shift and go to state 13
    POWER           shift and go to state 14
    MODULO          shift and go to state 15
    ?               shift and go to state 16


state 20

    (1) statement -> NAME EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    EQUALITY        shift and go to state 12
    NOTEQUAL        shift and go to state 13
    POWER           shift and go to state 14
    MODULO          shift and go to state 15
    ?               shift and go to state 16


state 21

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    PLUS            reduce using rule 3 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 3 (expression -> expression PLUS expression .)
    EQUALITY        reduce using rule 3 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 3 (expression -> expression PLUS expression .)
    MODULO          reduce using rule 3 (expression -> expression PLUS expression .)
    ?               reduce using rule 3 (expression -> expression PLUS expression .)
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    :               reduce using rule 3 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    POWER           shift and go to state 14

  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 22

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    PLUS            reduce using rule 4 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 4 (expression -> expression MINUS expression .)
    EQUALITY        reduce using rule 4 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 4 (expression -> expression MINUS expression .)
    MODULO          reduce using rule 4 (expression -> expression MINUS expression .)
    ?               reduce using rule 4 (expression -> expression MINUS expression .)
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    :               reduce using rule 4 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    POWER           shift and go to state 14

  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 23

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    PLUS            reduce using rule 5 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 5 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 5 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 5 (expression -> expression TIMES expression .)
    EQUALITY        reduce using rule 5 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 5 (expression -> expression TIMES expression .)
    MODULO          reduce using rule 5 (expression -> expression TIMES expression .)
    ?               reduce using rule 5 (expression -> expression TIMES expression .)
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)
    :               reduce using rule 5 (expression -> expression TIMES expression .)
    POWER           shift and go to state 14

  ! POWER           [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 24

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    PLUS            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 6 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 6 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    EQUALITY        reduce using rule 6 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 6 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 6 (expression -> expression DIVIDE expression .)
    ?               reduce using rule 6 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)
    :               reduce using rule 6 (expression -> expression DIVIDE expression .)
    POWER           shift and go to state 14

  ! POWER           [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 25

    (7) expression -> expression EQUALITY expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    EQUALITY        reduce using rule 7 (expression -> expression EQUALITY expression .)
    ?               reduce using rule 7 (expression -> expression EQUALITY expression .)
    $end            reduce using rule 7 (expression -> expression EQUALITY expression .)
    RPAREN          reduce using rule 7 (expression -> expression EQUALITY expression .)
    :               reduce using rule 7 (expression -> expression EQUALITY expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    NOTEQUAL        shift and go to state 13
    POWER           shift and go to state 14
    MODULO          shift and go to state 15

  ! PLUS            [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! NOTEQUAL        [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! POWER           [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! MODULO          [ reduce using rule 7 (expression -> expression EQUALITY expression .) ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! ?               [ shift and go to state 16 ]


state 26

    (8) expression -> expression NOTEQUAL expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    EQUALITY        reduce using rule 8 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 8 (expression -> expression NOTEQUAL expression .)
    ?               reduce using rule 8 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 8 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 8 (expression -> expression NOTEQUAL expression .)
    :               reduce using rule 8 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    POWER           shift and go to state 14
    MODULO          shift and go to state 15

  ! PLUS            [ reduce using rule 8 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression NOTEQUAL expression .) ]
  ! POWER           [ reduce using rule 8 (expression -> expression NOTEQUAL expression .) ]
  ! MODULO          [ reduce using rule 8 (expression -> expression NOTEQUAL expression .) ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! ?               [ shift and go to state 16 ]


state 27

    (9) expression -> expression POWER expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    PLUS            reduce using rule 9 (expression -> expression POWER expression .)
    MINUS           reduce using rule 9 (expression -> expression POWER expression .)
    TIMES           reduce using rule 9 (expression -> expression POWER expression .)
    DIVIDE          reduce using rule 9 (expression -> expression POWER expression .)
    EQUALITY        reduce using rule 9 (expression -> expression POWER expression .)
    NOTEQUAL        reduce using rule 9 (expression -> expression POWER expression .)
    POWER           reduce using rule 9 (expression -> expression POWER expression .)
    MODULO          reduce using rule 9 (expression -> expression POWER expression .)
    ?               reduce using rule 9 (expression -> expression POWER expression .)
    $end            reduce using rule 9 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 9 (expression -> expression POWER expression .)
    :               reduce using rule 9 (expression -> expression POWER expression .)

  ! PLUS            [ shift and go to state 8 ]
  ! MINUS           [ shift and go to state 9 ]
  ! TIMES           [ shift and go to state 10 ]
  ! DIVIDE          [ shift and go to state 11 ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! POWER           [ shift and go to state 14 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 28

    (10) expression -> expression MODULO expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    EQUALITY        reduce using rule 10 (expression -> expression MODULO expression .)
    NOTEQUAL        reduce using rule 10 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 10 (expression -> expression MODULO expression .)
    ?               reduce using rule 10 (expression -> expression MODULO expression .)
    $end            reduce using rule 10 (expression -> expression MODULO expression .)
    RPAREN          reduce using rule 10 (expression -> expression MODULO expression .)
    :               reduce using rule 10 (expression -> expression MODULO expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    POWER           shift and go to state 14

  ! PLUS            [ reduce using rule 10 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression MODULO expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression MODULO expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression MODULO expression .) ]
  ! POWER           [ reduce using rule 10 (expression -> expression MODULO expression .) ]
  ! EQUALITY        [ shift and go to state 12 ]
  ! NOTEQUAL        [ shift and go to state 13 ]
  ! MODULO          [ shift and go to state 15 ]
  ! ?               [ shift and go to state 16 ]


state 29

    (11) expression -> expression ? expression . : expression
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    :               shift and go to state 31
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    EQUALITY        shift and go to state 12
    NOTEQUAL        shift and go to state 13
    POWER           shift and go to state 14
    MODULO          shift and go to state 15
    ?               shift and go to state 16


state 30

    (13) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    EQUALITY        reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    POWER           reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    ?               reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (expression -> LPAREN expression RPAREN .)
    :               reduce using rule 13 (expression -> LPAREN expression RPAREN .)


state 31

    (11) expression -> expression ? expression : . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression EQUALITY expression
    (8) expression -> . expression NOTEQUAL expression
    (9) expression -> . expression POWER expression
    (10) expression -> . expression MODULO expression
    (11) expression -> . expression ? expression : expression
    (12) expression -> . MINUS expression
    (13) expression -> . LPAREN expression RPAREN
    (14) expression -> . NUMBER
    (15) expression -> . NAME

    MINUS           shift and go to state 4
    LPAREN          shift and go to state 5
    NUMBER          shift and go to state 6
    NAME            shift and go to state 18

    expression                     shift and go to state 32

state 32

    (11) expression -> expression ? expression : expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . EQUALITY expression
    (8) expression -> expression . NOTEQUAL expression
    (9) expression -> expression . POWER expression
    (10) expression -> expression . MODULO expression
    (11) expression -> expression . ? expression : expression

    ?               reduce using rule 11 (expression -> expression ? expression : expression .)
    $end            reduce using rule 11 (expression -> expression ? expression : expression .)
    RPAREN          reduce using rule 11 (expression -> expression ? expression : expression .)
    :               reduce using rule 11 (expression -> expression ? expression : expression .)
    PLUS            shift and go to state 8
    MINUS           shift and go to state 9
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11
    EQUALITY        shift and go to state 12
    NOTEQUAL        shift and go to state 13
    POWER           shift and go to state 14
    MODULO          shift and go to state 15

  ! PLUS            [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! EQUALITY        [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! NOTEQUAL        [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! POWER           [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! MODULO          [ reduce using rule 11 (expression -> expression ? expression : expression .) ]
  ! ?               [ shift and go to state 16 ]

